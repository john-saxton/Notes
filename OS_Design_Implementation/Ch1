Computer system consists of levels
  Physical Device
  Microarchitecture
    -physical devices grouped together to form functional units. Registers internal to CPU and a data path containing an arithmetic logic unit. 
    In each clock cycle, one or two operands are fetched from the registers and combined in the ALU. Sometimes controlled by a "microprogram" 
    other times by hardware itself.
  Machine Language
    -For operations that require more than one data path cycle, a set of hardware instructions visible to an assembly language programmer form the
    Instruction Set Architecture (ISA). Typically between 50-300 instructions for moving data, doing arithmetic, comparing values. I/O devices controlled
    by loading values into device registers. A disk can be "read" by loading values telling it what data to read into its registers.
  Operating System
    -Provides abstraction of the levels below so differences in those details don't have to be worried about.
  System Software
    -Shell, utilities, window systems, compilers, editors.
    -These are not the operating system
    -Operating system operates in supervisor mode, and is protected from user changes. System software and other software run in user mode, where the
    user is in control.
Operating System is intended to present the user with an extended or virtual machine that is easier to program than the underlying hardware. This is a top-down view, bottom-up view would be that the OS is there to manage the pieces of a complex system. Orderly and controlled allocation of processors, memories, I/O devices.
